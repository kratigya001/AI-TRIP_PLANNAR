@tailwind base;
@tailwind components;
@tailwind utilities;


 

/* @layer base {
  * {
    /* THIS IS THE LINE THAT CHANGED */
    /* border-color: theme('colors.border');
  }
  body {
    @apply bg-background text-foreground;
  }
} */ */

/* @tailwind base;
@tailwind components;
@tailwind utilities; */

/* ShadCN Radix UI styles */
/* @layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 47.4% 11.2%;
  }
} */

/* @layer utilities {
  .dialog-overlay {
    @apply fixed inset-0 bg-black/50;
  }
} */

/* * @type {import('tailwindcss').Config}
export default {
  darkMode: ["class"],
  content: [
    /* './components/**.{ts,tsx,jsx}',
    /* /* './app/**.{ts,tsx,jsx}',
    /* /* './src/**.{ts,tsx,jsx}',
  ], */
  /* prefix: "",
  theme: {
    container: { */
      /* center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))", */
        /* },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))", */ 
          /* foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: { */
          /* DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)", */
      /* },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate")],
} */ 
